<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\FLASH\testV1.0.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\FLASH\testV1.0.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Tue Nov 26 14:33:38 2013
<BR><P>
<H3>Maximum Stack Usage =        344 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; suanfa &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; _drem
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[244b694]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[244b568]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[244b568]">NMI_Handler</a><BR>
 <LI><a href="#[244b52c]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[244b52c]">HardFault_Handler</a><BR>
 <LI><a href="#[244b4f0]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[244b4f0]">MemManage_Handler</a><BR>
 <LI><a href="#[244b4b4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[244b4b4]">BusFault_Handler</a><BR>
 <LI><a href="#[244b478]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[244b478]">UsageFault_Handler</a><BR>
 <LI><a href="#[244b43c]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[244b43c]">SVC_Handler</a><BR>
 <LI><a href="#[244b400]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[244b400]">DebugMon_Handler</a><BR>
 <LI><a href="#[244b3c4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[244b3c4]">PendSV_Handler</a><BR>
 <LI><a href="#[244b388]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[244b388]">SysTick_Handler</a><BR>
 <LI><a href="#[244b34c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[244b34c]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[244b5a4]">Reset_Handler</a>
 <LI><a href="#[244b568]">NMI_Handler</a>
 <LI><a href="#[244b52c]">HardFault_Handler</a>
 <LI><a href="#[244b4f0]">MemManage_Handler</a>
 <LI><a href="#[244b4b4]">BusFault_Handler</a>
 <LI><a href="#[244b478]">UsageFault_Handler</a>
 <LI><a href="#[244b43c]">SVC_Handler</a>
 <LI><a href="#[244b400]">DebugMon_Handler</a>
 <LI><a href="#[244b3c4]">PendSV_Handler</a>
 <LI><a href="#[244b388]">SysTick_Handler</a>
 <LI><a href="#[244abcc]">WDT_IRQHandler</a>
 <LI><a href="#[244ade8]">TIMER0_IRQHandler</a>
 <LI><a href="#[244adac]">TIMER1_IRQHandler</a>
 <LI><a href="#[244ad70]">TIMER2_IRQHandler</a>
 <LI><a href="#[244ad34]">TIMER3_IRQHandler</a>
 <LI><a href="#[2445b68]">UART0_IRQHandler</a>
 <LI><a href="#[244acbc]">UART1_IRQHandler</a>
 <LI><a href="#[244ac80]">UART2_IRQHandler</a>
 <LI><a href="#[2445b2c]">UART3_IRQHandler</a>
 <LI><a href="#[244af8c]">PWM1_IRQHandler</a>
 <LI><a href="#[244b130]">I2C0_IRQHandler</a>
 <LI><a href="#[244b0f4]">I2C1_IRQHandler</a>
 <LI><a href="#[244b0b8]">I2C2_IRQHandler</a>
 <LI><a href="#[244ae9c]">SPI_IRQHandler</a>
 <LI><a href="#[2446bd0]">SSP0_IRQHandler</a>
 <LI><a href="#[244ae24]">SSP1_IRQHandler</a>
 <LI><a href="#[244b004]">PLL0_IRQHandler</a>
 <LI><a href="#[24466a8]">RTC_IRQHandler</a>
 <LI><a href="#[244b25c]">EINT0_IRQHandler</a>
 <LI><a href="#[244b220]">EINT1_IRQHandler</a>
 <LI><a href="#[244b1e4]">EINT2_IRQHandler</a>
 <LI><a href="#[244b1a8]">EINT3_IRQHandler</a>
 <LI><a href="#[244b34c]">ADC_IRQHandler</a>
 <LI><a href="#[244b310]">BOD_IRQHandler</a>
 <LI><a href="#[244ac08]">USB_IRQHandler</a>
 <LI><a href="#[24469b4]">CAN_IRQHandler</a>
 <LI><a href="#[244b298]">DMA_IRQHandler</a>
 <LI><a href="#[244b07c]">I2S_IRQHandler</a>
 <LI><a href="#[244b16c]">ENET_IRQHandler</a>
 <LI><a href="#[244af14]">RIT_IRQHandler</a>
 <LI><a href="#[244b040]">MCPWM_IRQHandler</a>
 <LI><a href="#[244af50]">QEI_IRQHandler</a>
 <LI><a href="#[244afc8]">PLL1_IRQHandler</a>
 <LI><a href="#[2445028]">__main</a>
 <LI><a href="#[31a725c]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2445028]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2442544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[31a4bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[31a4bb0]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2445028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[31a4b74]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2442544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[31a4b38]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[31a4afc]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[31a4cdc]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[31a4ca0]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[31a4958]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[243f538]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2440a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[243dc24]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[243dc9c]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[243e05c]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[243def4]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[243db34]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[243dbac]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[243df6c]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[243de7c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[243e458]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[243e2b4]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[243e23c]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[243e1c4]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[243e14c]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[243e0d4]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[243e368]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[243daf8]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[243dfe4]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[243de04]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[243e3e0]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[31a75a4]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[243d378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[31a6938]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[31a6758]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[31a671c]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[31a6884]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[31a69ec]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[31a680c]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[2442544]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2445028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[31a4b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[2440b40]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[24407bc]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[243fa9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2440a8c]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[243f538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[2440ac8]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[24409d8]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; suanfa &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[243f934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2440a14]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[243efd4]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[243f934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[243d378]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[31a75a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[243d3b4]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[243d33c]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[243d030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[244b5a4]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b568]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244b568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[244b568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b52c]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244b52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[244b52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b4f0]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244b4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[244b4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b4b4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244b4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[244b4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b478]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244b478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[244b478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b43c]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244b43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[244b43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b400]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244b400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[244b400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b3c4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244b3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[244b3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b388]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244b388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[244b388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b34c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244b34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[244b34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b310]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b298]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b25c]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b220]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b1e4]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b1a8]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b16c]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b130]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b0f4]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b0b8]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b07c]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b040]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b004]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244afc8]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244af8c]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244af50]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244af14]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244ae9c]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244ae24]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244ade8]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244adac]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244ad70]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244ad34]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244acbc]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244ac80]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244ac08]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244abcc]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244b694]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[243fa9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2445334]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2446504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
</UL>

<P><STRONG><a name="[24452f8]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[24452bc]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[2445280]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[2445190]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2445154]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2445118]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[24422ec]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24404b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[24422b0]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[24404b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2442634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[2442904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[24404b0]"></a>__aeabi_errno_addr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24422b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[24422ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[2440474]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[2440438]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[243fc04]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[243fbc8]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[243fa9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[243fb8c]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[243fa9c]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[243fbc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[244b694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[24407bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[243f934]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[243efd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[24409d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[243d030]"></a>_sys_exit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[243d33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[31a725c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[31a7220]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[2442184]"></a>__fpl_dcheck_NaN2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck.o(x$fpl$dcheck))
<BR><BR>[Calls]<UL><LI><a href="#[243ff88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[24400b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[2441f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
<LI><a href="#[2443ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[24446c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[2444998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[2444ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[2442058]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[243ff88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[2440258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[2441464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn
<LI><a href="#[2441e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[2444470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[2444e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[2441338]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, usenofp.o(x$fpl$usenofp), UNUSED)

<P><STRONG><a name="[244a35c]"></a>SystemInit</STRONG> (Thumb, 510 bytes, Stack size 0 bytes, system_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2446c48]"></a>crc_chk_value</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = crc_chk_value
</UL>
<BR>[Called By]<UL><LI><a href="#[2446018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_chuli
<LI><a href="#[24462e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_communication
<LI><a href="#[2446bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP0_IRQHandler
</UL>

<P><STRONG><a name="[2446c0c]"></a>SSP0_Init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSP0_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2449fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2446bd0]"></a>SSP0_IRQHandler</STRONG> (Thumb, 432 bytes, Stack size 12 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SSP0_IRQHandler &rArr; crc_chk_value
</UL>
<BR>[Calls]<UL><LI><a href="#[2446c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2446b94]"></a>SelSector</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SelSector
</UL>
<BR>[Called By]<UL><LI><a href="#[244639c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameter_init
</UL>

<P><STRONG><a name="[2446b58]"></a>EraseSector</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[244639c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameter_init
</UL>

<P><STRONG><a name="[2446b1c]"></a>RamToFlash</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RamToFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[244639c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameter_init
</UL>

<P><STRONG><a name="[2446ae0]"></a>Compare</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[2446aa4]"></a>read_sec</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2445c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shangweiji_chuli
<LI><a href="#[2445dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_clear
</UL>

<P><STRONG><a name="[2446a68]"></a>read_sec1</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24461f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dial_switch
<LI><a href="#[244639c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameter_init
</UL>

<P><STRONG><a name="[2446a2c]"></a>delay</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2445dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_clear
<LI><a href="#[2446090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ask_handle
<LI><a href="#[2446144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M_cj_handle
</UL>

<P><STRONG><a name="[24469f0]"></a>CAN1_SendMessage</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2446018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_chuli
<LI><a href="#[24462e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_communication
<LI><a href="#[24469b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_IRQHandler
</UL>

<P><STRONG><a name="[24469b4]"></a>CAN_IRQHandler</STRONG> (Thumb, 468 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CAN_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[24469f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_SendMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2446978]"></a>CAN_Init</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2449fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[244693c]"></a>CAN_INIT</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_INIT
</UL>
<BR>[Calls]<UL><LI><a href="#[2449fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[24461f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dial_switch
</UL>

<P><STRONG><a name="[2446900]"></a>CAN_SetACCF_Lookup</STRONG> (Thumb, 270 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_SetACCF_Lookup
</UL>
<BR>[Called By]<UL><LI><a href="#[24468c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_SetACCF
</UL>

<P><STRONG><a name="[24468c4]"></a>CAN_SetACCF</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CAN_SetACCF &rArr; CAN_SetACCF_Lookup
</UL>
<BR>[Calls]<UL><LI><a href="#[2446900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_SetACCF_Lookup
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[24461f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dial_switch
</UL>

<P><STRONG><a name="[2446888]"></a>ClrRevFIFO</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2446810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[244684c]"></a>ClrRevFIFO1</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24467d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
</UL>

<P><STRONG><a name="[2446810]"></a>UART0_Init</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART0_Init &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[24444ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2444704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2446888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrRevFIFO
<LI><a href="#[2449fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24467d4]"></a>UART3_Init</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART3_Init &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[24444ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2444704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[244684c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrRevFIFO1
<LI><a href="#[2449fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2446798]"></a>UART0_GetByte</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2445c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shangweiji_chuli
<LI><a href="#[2445c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smallscreen_chuli
<LI><a href="#[2445c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bigscreen_chuli
<LI><a href="#[2445cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_chuli
<LI><a href="#[2445d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_handle1
</UL>

<P><STRONG><a name="[244675c]"></a>UART0_SendByte</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2445c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shangweiji_chuli
<LI><a href="#[2445c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smallscreen_chuli
<LI><a href="#[2445c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bigscreen_chuli
<LI><a href="#[2445d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display
<LI><a href="#[2445dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_screeninit
<LI><a href="#[2445dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_clear
<LI><a href="#[2445e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_state
<LI><a href="#[2445e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_parameter
<LI><a href="#[2445eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_password
<LI><a href="#[2445eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_parametersave
<LI><a href="#[2445f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display1
<LI><a href="#[2445f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_errlist
<LI><a href="#[2446090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ask_handle
<LI><a href="#[24460cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_chubu
<LI><a href="#[2446144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M_cj_handle
<LI><a href="#[24461f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dial_switch
<LI><a href="#[24462e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_communication
</UL>

<P><STRONG><a name="[2446720]"></a>UART3_GetByte</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2445ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_com
<LI><a href="#[2445be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_com
<LI><a href="#[2445c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shangweiji_chuli
<LI><a href="#[2445c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smallscreen_chuli
<LI><a href="#[2445c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bigscreen_chuli
<LI><a href="#[2445cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_chuli
</UL>

<P><STRONG><a name="[24466e4]"></a>UART3_SendByte</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2445ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_com
<LI><a href="#[2445c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shangweiji_chuli
<LI><a href="#[2445c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smallscreen_chuli
<LI><a href="#[2445c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bigscreen_chuli
<LI><a href="#[2445d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display
<LI><a href="#[2445dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_screeninit
<LI><a href="#[2445dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_clear
<LI><a href="#[2445e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_state
<LI><a href="#[2445e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_parameter
<LI><a href="#[2445eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_password
<LI><a href="#[2445eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_parametersave
<LI><a href="#[2445f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display1
<LI><a href="#[2445f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_errlist
<LI><a href="#[2446090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ask_handle
<LI><a href="#[24460cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_chubu
<LI><a href="#[2446144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M_cj_handle
<LI><a href="#[24462e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_communication
</UL>

<P><STRONG><a name="[24466a8]"></a>RTC_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[244666c]"></a>RTCInit</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2445c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shangweiji_chuli
<LI><a href="#[2445eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_parametersave
</UL>

<P><STRONG><a name="[2446630]"></a>RTCStart</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2445c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shangweiji_chuli
<LI><a href="#[2445eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_parametersave
</UL>

<P><STRONG><a name="[24465f4]"></a>RTCStop</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2445c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shangweiji_chuli
<LI><a href="#[2445eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_parametersave
</UL>

<P><STRONG><a name="[24465b8]"></a>RTC_CTCReset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[244657c]"></a>RTCSetTime</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTCSetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[2445c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shangweiji_chuli
<LI><a href="#[2445eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_parametersave
</UL>

<P><STRONG><a name="[2446540]"></a>RTCSetAlarm</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[2446504]"></a>RTCGetTime</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RTCGetTime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2445334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2445c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shangweiji_chuli
<LI><a href="#[2445d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display
<LI><a href="#[2445e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_parameter
<LI><a href="#[2445f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display1
<LI><a href="#[2446144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M_cj_handle
<LI><a href="#[2446180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handle
</UL>

<P><STRONG><a name="[24464c8]"></a>RTCSetAlarmMask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[244648c]"></a>crc_chk</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = crc_chk
</UL>
<BR>[Called By]<UL><LI><a href="#[2445ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_com
<LI><a href="#[2445be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_com
<LI><a href="#[2445c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shangweiji_chuli
<LI><a href="#[2445c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smallscreen_chuli
<LI><a href="#[2445c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bigscreen_chuli
<LI><a href="#[2445cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_chuli
<LI><a href="#[2445d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display
<LI><a href="#[2445d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_handle1
<LI><a href="#[2445e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_parameter
<LI><a href="#[2445eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_password
<LI><a href="#[2445f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display1
<LI><a href="#[2445f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_errlist
<LI><a href="#[2446090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ask_handle
<LI><a href="#[24460cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_chubu
<LI><a href="#[2446144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M_cj_handle
</UL>

<P><STRONG><a name="[2446450]"></a>I2c0_Init</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2c0_Init &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[24444ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2444704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2444b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2446414]"></a>I2c0_Recv</STRONG> (Thumb, 436 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2c0_Recv
</UL>
<BR>[Called By]<UL><LI><a href="#[2445dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_clear
<LI><a href="#[24462ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GZ_init
<LI><a href="#[2446324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screen_Parameter
<LI><a href="#[244639c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameter_init
</UL>

<P><STRONG><a name="[24463d8]"></a>I2c0_Send</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2c0_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[2445ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_com
<LI><a href="#[2445c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shangweiji_chuli
<LI><a href="#[2445c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smallscreen_chuli
<LI><a href="#[2445c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bigscreen_chuli
<LI><a href="#[2445dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_clear
<LI><a href="#[2445eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_parametersave
<LI><a href="#[2446018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_chuli
<LI><a href="#[2446180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handle
<LI><a href="#[24461f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dial_switch
<LI><a href="#[24462ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GZ_init
<LI><a href="#[24462e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_communication
<LI><a href="#[2446324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screen_Parameter
<LI><a href="#[244639c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameter_init
</UL>

<P><STRONG><a name="[244639c]"></a>Parameter_init</STRONG> (Thumb, 1662 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Parameter_init &rArr; I2c0_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[24463d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Send
<LI><a href="#[2446414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Recv
<LI><a href="#[2446a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sec1
<LI><a href="#[2446b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamToFlash
<LI><a href="#[2446b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseSector
<LI><a href="#[2446b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelSector
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2446360]"></a>agreement_transform</STRONG> (Thumb, 2266 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = agreement_transform
</UL>
<BR>[Called By]<UL><LI><a href="#[2445c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smallscreen_chuli
<LI><a href="#[2445c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bigscreen_chuli
<LI><a href="#[2446324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screen_Parameter
</UL>

<P><STRONG><a name="[2446324]"></a>screen_Parameter</STRONG> (Thumb, 208 bytes, Stack size 12 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = screen_Parameter &rArr; I2c0_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[2446360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agreement_transform
<LI><a href="#[24463d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Send
<LI><a href="#[2446414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Recv
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24462e8]"></a>SPI_communication</STRONG> (Thumb, 860 bytes, Stack size 12 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SPI_communication &rArr; I2c0_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[24463d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Send
<LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
<LI><a href="#[24469f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_SendMessage
<LI><a href="#[2446c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk_value
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24462ac]"></a>GZ_init</STRONG> (Thumb, 230 bytes, Stack size 12 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GZ_init &rArr; I2c0_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[24463d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Send
<LI><a href="#[2446414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Recv
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2446270]"></a>GPIO_init</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2446234]"></a>TIME_init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIME_init &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2443f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[24441a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[24444ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24461f8]"></a>Dial_switch</STRONG> (Thumb, 1270 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Dial_switch &rArr; I2c0_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[24463d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Send
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
<LI><a href="#[24468c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_SetACCF
<LI><a href="#[244693c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_INIT
<LI><a href="#[2446a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sec1
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24461bc]"></a>Start_judge</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2446180]"></a>error_handle</STRONG> (Thumb, 820 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = error_handle &rArr; RTCGetTime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[24463d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Send
<LI><a href="#[2446504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2446144]"></a>M_cj_handle</STRONG> (Thumb, 2442 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = M_cj_handle &rArr; RTCGetTime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[244648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk
<LI><a href="#[2446504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
<LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
<LI><a href="#[2446a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2446108]"></a>bag</STRONG> (Thumb, 5666 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bag &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2442e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2443c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2443f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2444254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[24444ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2444704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2446090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ask_handle
</UL>

<P><STRONG><a name="[24460cc]"></a>uart_chubu</STRONG> (Thumb, 724 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart_chubu &rArr; crc_chk
</UL>
<BR>[Calls]<UL><LI><a href="#[244648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk
<LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2446090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ask_handle
</UL>

<P><STRONG><a name="[2446090]"></a>ask_handle</STRONG> (Thumb, 1580 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ask_handle &rArr; bag &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[24460cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_chubu
<LI><a href="#[2446108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bag
<LI><a href="#[244648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk
<LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
<LI><a href="#[2446a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2446054]"></a>suanfa</STRONG> (Thumb, 5830 bytes, Stack size 112 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = suanfa &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[2442634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[2442904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[2442b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[2442c88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2442db4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[2442e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[24430c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[2443318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2443570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2443804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2443930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[2443c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2443da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2443f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2444254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[24444ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2444704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[24449d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2444b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2444ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2446018]"></a>can_chuli</STRONG> (Thumb, 2144 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = can_chuli &rArr; I2c0_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[24463d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Send
<LI><a href="#[24469f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_SendMessage
<LI><a href="#[2446c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk_value
</UL>
<BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2445fdc]"></a>main</STRONG> (Thumb, 674 bytes, Stack size 80 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = main &rArr; suanfa &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[2443da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2443f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2444074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[24441a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2444254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2446018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_chuli
<LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
<LI><a href="#[2446090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ask_handle
<LI><a href="#[2446144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M_cj_handle
<LI><a href="#[2446180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handle
<LI><a href="#[24461bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_judge
<LI><a href="#[24461f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dial_switch
<LI><a href="#[2446234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_init
<LI><a href="#[2446270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_init
<LI><a href="#[24462ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GZ_init
<LI><a href="#[24462e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_communication
<LI><a href="#[2446324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screen_Parameter
<LI><a href="#[244639c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameter_init
<LI><a href="#[2446450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Init
<LI><a href="#[24467d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[2446810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
<LI><a href="#[24468c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_SetACCF
<LI><a href="#[244693c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_INIT
<LI><a href="#[2446c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP0_Init
<LI><a href="#[244a35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[24409d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[2445fa0]"></a>dw_fc1</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2445d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_handle1
</UL>

<P><STRONG><a name="[2445f64]"></a>dw_errlist</STRONG> (Thumb, 1962 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dw_errlist &rArr; crc_chk
</UL>
<BR>[Calls]<UL><LI><a href="#[244648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk
<LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2445d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display
<LI><a href="#[2445f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display1
</UL>

<P><STRONG><a name="[2445f28]"></a>dw_display1</STRONG> (Thumb, 23222 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dw_display1 &rArr; RTCGetTime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2445f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_errlist
<LI><a href="#[244648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk
<LI><a href="#[2446504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
<LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2445d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_handle1
</UL>

<P><STRONG><a name="[2445eec]"></a>dw_parametersave</STRONG> (Thumb, 1682 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dw_parametersave &rArr; I2c0_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[24463d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Send
<LI><a href="#[244657c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCSetTime
<LI><a href="#[24465f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCStop
<LI><a href="#[2446630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCStart
<LI><a href="#[244666c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCInit
<LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2445cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_chuli
<LI><a href="#[2445d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_handle1
</UL>

<P><STRONG><a name="[2445eb0]"></a>dw_password</STRONG> (Thumb, 842 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dw_password &rArr; crc_chk
</UL>
<BR>[Calls]<UL><LI><a href="#[244648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk
<LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2445cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_chuli
<LI><a href="#[2445d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_handle1
</UL>

<P><STRONG><a name="[2445e74]"></a>dw_parameter</STRONG> (Thumb, 2184 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dw_parameter &rArr; RTCGetTime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[244648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk
<LI><a href="#[2446504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
<LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2445cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_chuli
<LI><a href="#[2445d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_handle1
</UL>

<P><STRONG><a name="[2445e38]"></a>dw_state</STRONG> (Thumb, 702 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dw_state
</UL>
<BR>[Calls]<UL><LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2445cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_chuli
<LI><a href="#[2445d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_handle1
</UL>

<P><STRONG><a name="[2445dfc]"></a>dw_clear</STRONG> (Thumb, 1892 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = dw_clear &rArr; I2c0_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[24463d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Send
<LI><a href="#[2446414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Recv
<LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
<LI><a href="#[2446a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[2446aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sec
</UL>
<BR>[Called By]<UL><LI><a href="#[2445cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_chuli
<LI><a href="#[2445d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_handle1
</UL>

<P><STRONG><a name="[2445dc0]"></a>dw_screeninit</STRONG> (Thumb, 544 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dw_screeninit
</UL>
<BR>[Calls]<UL><LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2445cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_chuli
<LI><a href="#[2445d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_handle1
</UL>

<P><STRONG><a name="[2445d84]"></a>diwen_handle1</STRONG> (Thumb, 338 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = diwen_handle1 &rArr; dw_parameter &rArr; RTCGetTime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2445dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_screeninit
<LI><a href="#[2445dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_clear
<LI><a href="#[2445e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_state
<LI><a href="#[2445e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_parameter
<LI><a href="#[2445eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_password
<LI><a href="#[2445eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_parametersave
<LI><a href="#[2445f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display1
<LI><a href="#[2445fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_fc1
<LI><a href="#[244648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk
<LI><a href="#[2446798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_GetByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2445b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[2445d48]"></a>dw_fc</STRONG> (Thumb, 290 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2445cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_chuli
</UL>

<P><STRONG><a name="[2445d0c]"></a>dw_display</STRONG> (Thumb, 11200 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dw_display &rArr; RTCGetTime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2442e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2443c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2443f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2444254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[24444ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2444704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2445f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_errlist
<LI><a href="#[244648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk
<LI><a href="#[2446504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
<LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2445cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_chuli
</UL>

<P><STRONG><a name="[2445cd0]"></a>diwen_chuli</STRONG> (Thumb, 444 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = diwen_chuli &rArr; dw_display &rArr; RTCGetTime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2445d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display
<LI><a href="#[2445d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_fc
<LI><a href="#[2445dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_screeninit
<LI><a href="#[2445dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_clear
<LI><a href="#[2445e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_state
<LI><a href="#[2445e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_parameter
<LI><a href="#[2445eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_password
<LI><a href="#[2445eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_parametersave
<LI><a href="#[244648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk
<LI><a href="#[2446720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_GetByte
<LI><a href="#[2446798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_GetByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2445b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[2445b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[2445c94]"></a>bigscreen_chuli</STRONG> (Thumb, 1984 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bigscreen_chuli &rArr; I2c0_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[2446360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agreement_transform
<LI><a href="#[24463d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Send
<LI><a href="#[244648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk
<LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[2446720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_GetByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
<LI><a href="#[2446798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_GetByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2445b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[2445b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[2445c58]"></a>smallscreen_chuli</STRONG> (Thumb, 1640 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smallscreen_chuli &rArr; I2c0_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[2446360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agreement_transform
<LI><a href="#[24463d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Send
<LI><a href="#[244648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk
<LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[2446720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_GetByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
<LI><a href="#[2446798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_GetByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2445b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[2445b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[2445c1c]"></a>shangweiji_chuli</STRONG> (Thumb, 3688 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = shangweiji_chuli &rArr; RTCGetTime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[24463d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Send
<LI><a href="#[244648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk
<LI><a href="#[2446504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
<LI><a href="#[244657c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCSetTime
<LI><a href="#[24465f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCStop
<LI><a href="#[2446630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCStart
<LI><a href="#[244666c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCInit
<LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[2446720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_GetByte
<LI><a href="#[244675c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
<LI><a href="#[2446798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_GetByte
<LI><a href="#[2446aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sec
</UL>
<BR>[Called By]<UL><LI><a href="#[2445b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[2445b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[2445be0]"></a>host_com</STRONG> (Thumb, 1542 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = host_com &rArr; crc_chk
</UL>
<BR>[Calls]<UL><LI><a href="#[244648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk
<LI><a href="#[2446720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_GetByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2445b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
</UL>

<P><STRONG><a name="[2445ba4]"></a>other_com</STRONG> (Thumb, 4702 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = other_com &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2442e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2443c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2443f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2444254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[24444ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2444704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[24463d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Send
<LI><a href="#[244648c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_chk
<LI><a href="#[24466e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
<LI><a href="#[2446720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_GetByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2445b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
</UL>

<P><STRONG><a name="[2445b68]"></a>UART0_IRQHandler</STRONG> (Thumb, 238 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = UART0_IRQHandler &rArr; diwen_chuli &rArr; dw_display &rArr; RTCGetTime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2445c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shangweiji_chuli
<LI><a href="#[2445c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smallscreen_chuli
<LI><a href="#[2445c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bigscreen_chuli
<LI><a href="#[2445cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_chuli
<LI><a href="#[2445d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_handle1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2445b2c]"></a>UART3_IRQHandler</STRONG> (Thumb, 306 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = UART3_IRQHandler &rArr; diwen_chuli &rArr; dw_display &rArr; RTCGetTime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2445ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_com
<LI><a href="#[2445be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_com
<LI><a href="#[2445c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shangweiji_chuli
<LI><a href="#[2445c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smallscreen_chuli
<LI><a href="#[2445c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bigscreen_chuli
<LI><a href="#[2445cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diwen_chuli
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2440f78]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 642 bytes, Stack size 96 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[24400b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[2440294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[24414a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[2443f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2444254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2444704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[24449d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2444a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2444b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2442904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[24411d0]"></a>__kernel_cos</STRONG> (Thumb, 222 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[243fda8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2440294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[24414a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[2443f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[24449d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2444a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2442904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[243fda8]"></a>__kernel_poly</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2443f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2444b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2440dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[24411d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[2440dd4]"></a>__kernel_sin</STRONG> (Thumb, 222 bytes, Stack size 56 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[243fda8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2440294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[24414a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[2443f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[24449d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2444a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2444b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2442904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[2442904]"></a>sin</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[2440dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2440f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[24411d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[24414a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[24422b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
</UL>

<P><STRONG><a name="[2442634]"></a>sqrt</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[2441e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[24422b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[2444074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
</UL>

<P><STRONG><a name="[2444ec0]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Called By]<UL><LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
</UL>

<P><STRONG><a name="[2444e84]"></a>_d2f</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2442058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[2444e48]"></a>__fpl_inf_d2f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, d2f.o(x$fpl$d2f), UNUSED)

<P><STRONG><a name="[2444b00]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[243fda8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2440dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2440f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
<LI><a href="#[2446450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Init
</UL>

<P><STRONG><a name="[2444ac4]"></a>_dadd</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2442184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[2444b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[2444a88]"></a>__fpl_inf_dadd</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)

<P><STRONG><a name="[2441f68]"></a>__fpl_dcmp_InfNaN</STRONG> (Thumb, 120 bytes, Stack size 4 bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[243fe98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
<LI><a href="#[2442184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>
<BR>[Called By]<UL><LI><a href="#[2443d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
<LI><a href="#[2444038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[2441f2c]"></a>__fpl_inf_dcmp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[24419c8]"></a>__fpl_fcmp_InfNaN</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[243fe98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
<LI><a href="#[2441ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>
<BR>[Called By]<UL><LI><a href="#[2442ae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
</UL>

<P><STRONG><a name="[244198c]"></a>__fpl_inf_fcmp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[2444704]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2440f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2445ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_com
<LI><a href="#[2445d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display
<LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
<LI><a href="#[2446108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bag
<LI><a href="#[2446450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Init
<LI><a href="#[24467d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[2446810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[24446c8]"></a>_ddiv</STRONG> (Thumb, 428 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2442184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[2444650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv_mantissas
</UL>

<P><STRONG><a name="[244468c]"></a>__fpl_inf_ddiv</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, ddiv.o(x$fpl$ddiv), UNUSED)

<P><STRONG><a name="[2444650]"></a>_ddiv_mantissas</STRONG> (Thumb, 324 bytes, Stack size 20 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24446c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[2440294]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[2440dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2440f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[24411d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[2440258]"></a>_dfix</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2442058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[244021c]"></a>__fpl_inf_dfix</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dfix.o(x$fpl$dfix), UNUSED)

<P><STRONG><a name="[24444ac]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[2445ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_com
<LI><a href="#[2445d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display
<LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
<LI><a href="#[2446108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bag
<LI><a href="#[2446234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_init
<LI><a href="#[2446450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_Init
<LI><a href="#[24467d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[2446810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[2444470]"></a>_dfixu</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2442058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[2444434]"></a>__fpl_inf_dfixu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dfixu.o(x$fpl$dfixu), UNUSED)

<P><STRONG><a name="[2444254]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[2440f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2445ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_com
<LI><a href="#[2445d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display
<LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
<LI><a href="#[2446108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bag
</UL>

<P><STRONG><a name="[2444218]"></a>_dflt</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[24441dc]"></a>__dflt_normalise</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dflt_clz.o(x$fpl$dflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2444164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfltu
</UL>

<P><STRONG><a name="[24441a0]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2446234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_init
</UL>

<P><STRONG><a name="[2444164]"></a>_dfltu</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24441dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dflt_normalise
</UL>

<P><STRONG><a name="[2444074]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Called By]<UL><LI><a href="#[2442634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2444038]"></a>_dcmple</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2441f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[2443f0c]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[243fda8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2440dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2440f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[24411d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2445ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_com
<LI><a href="#[2445d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display
<LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
<LI><a href="#[2446108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bag
<LI><a href="#[2446234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_init
</UL>

<P><STRONG><a name="[2443ed0]"></a>_dmul</STRONG> (Thumb, 440 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2442184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[2443e94]"></a>__fpl_inf_dmul</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dmul.o(x$fpl$dmul), UNUSED)

<P><STRONG><a name="[24400b4]"></a>_drem</STRONG> (Thumb, 396 bytes, Stack size 16 bytes, drem_clz.o(x$fpl$drem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[2442184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>
<BR>[Called By]<UL><LI><a href="#[2440f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[2440078]"></a>__fpl_inf_drem</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, drem_clz.o(x$fpl$drem), UNUSED)

<P><STRONG><a name="[2443da4]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Called By]<UL><LI><a href="#[2445fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
</UL>

<P><STRONG><a name="[2443d68]"></a>_drcmple</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2441f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[2444a4c]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2440dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2440f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[24411d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[2444a10]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2444b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[2444b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[2441e00]"></a>_dsqrt</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, dsqrt.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[2442058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[2442634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[2441dc4]"></a>__fpl_inf_dsqrt</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dsqrt.o(x$fpl$dsqrt), UNUSED)

<P><STRONG><a name="[24449d4]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2440dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2440f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[24411d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
</UL>

<P><STRONG><a name="[2444998]"></a>_dsub</STRONG> (Thumb, 572 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2442184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[2444b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[244495c]"></a>__fpl_inf_dsub</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[2441cd4]"></a>__dunder</STRONG> (Thumb, 234 bytes, Stack size 4 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[2441c98]"></a>__dunder_d</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[2443c78]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Called By]<UL><LI><a href="#[2445ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_com
<LI><a href="#[2445d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display
<LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
<LI><a href="#[2446108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bag
</UL>

<P><STRONG><a name="[2443c3c]"></a>_f2d</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2441ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[2443c00]"></a>__fpl_inf_f2d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, f2d.o(x$fpl$f2d), UNUSED)

<P><STRONG><a name="[2443930]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Called By]<UL><LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
</UL>

<P><STRONG><a name="[24438f4]"></a>_fadd</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2441ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[244396c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[24438b8]"></a>__fpl_inf_fadd</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[2441ba8]"></a>__fpl_fcheck_NaN2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fcheck.o(x$fpl$fcheck), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[243ff88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[24419c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
<LI><a href="#[2442c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[2443534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[24437c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[24438f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[2441ab8]"></a>__fpl_fcheck_NaN1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[243ff88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[2443084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[24432dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[2443c3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[2443570]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
</UL>

<P><STRONG><a name="[2443534]"></a>_fdiv</STRONG> (Thumb, 476 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2441ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[24434f8]"></a>__fpl_inf_fdiv</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fdiv.o(x$fpl$fdiv), UNUSED)

<P><STRONG><a name="[2443318]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Called By]<UL><LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
</UL>

<P><STRONG><a name="[24432dc]"></a>_ffix</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2441ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[24432a0]"></a>__fpl_inf_ffix</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, ffix.o(x$fpl$ffix), UNUSED)

<P><STRONG><a name="[24430c0]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Called By]<UL><LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
</UL>

<P><STRONG><a name="[2443084]"></a>_ffixu</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2441ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[2443048]"></a>__fpl_inf_ffixu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, ffixu.o(x$fpl$ffixu), UNUSED)

<P><STRONG><a name="[2442e68]"></a>__aeabi_i2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[2445ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_com
<LI><a href="#[2445d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dw_display
<LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
<LI><a href="#[2446108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bag
</UL>

<P><STRONG><a name="[2442e2c]"></a>_fflt</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[2442df0]"></a>__fflt_normalise</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fflt_clz.o(x$fpl$fflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2442d78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffltu
</UL>

<P><STRONG><a name="[2442db4]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
</UL>

<P><STRONG><a name="[2442d78]"></a>_ffltu</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2442df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fflt_normalise
</UL>

<P><STRONG><a name="[2442c88]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Called By]<UL><LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
</UL>

<P><STRONG><a name="[2442c4c]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2441ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[2442c10]"></a>__fpl_inf_fmul</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[244189c]"></a>__fpl_normalise2</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, fnorm2_clz.o(x$fpl$fnorm2), UNUSED)

<P><STRONG><a name="[2442b20]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf))
<BR><BR>[Called By]<UL><LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
</UL>

<P><STRONG><a name="[2442ae4]"></a>_frcmple</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24419c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[2443804]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fsub))
<BR><BR>[Called By]<UL><LI><a href="#[2446054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suanfa
</UL>

<P><STRONG><a name="[24437c8]"></a>_fsub</STRONG> (Thumb, 282 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2441ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[24439a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[244378c]"></a>__fpl_inf_fsub</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[24417ac]"></a>__funder</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[2441770]"></a>__funder_d</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[243ff88]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[243fe98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[2441ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[2441ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[2442058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[2442184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[24414a0]"></a>__ARM_scalbn</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Called By]<UL><LI><a href="#[2440dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2440f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[24411d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2442904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[2441464]"></a>scalbn</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2442058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[2441428]"></a>__fpl_inf_scalbn</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, scalbn.o(x$fpl$scalbn), UNUSED)

<P><STRONG><a name="[243fe98]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[243ff88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[24419c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
<LI><a href="#[2441f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2449fd8]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24467d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[2446810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
<LI><a href="#[244693c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_INIT
<LI><a href="#[2446978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Init
<LI><a href="#[2446c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP0_Init
</UL>

<P><STRONG><a name="[2444b78]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2444998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[2444a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[2444b3c]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2444a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[2444ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[24439a8]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24437c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[244396c]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24438f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
